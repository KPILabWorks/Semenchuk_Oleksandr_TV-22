"""Практична 3. Семенчук ТВ-22. Варінат 19.
Завадння:
19. Реалізуйте генерацію випадкових текстових даних для опису енергетичних проектів або звітів, 
що імітують реальні сценарії з використанням Markovify.
Оцініть якість згенерованих звітів для тестування алгоритмів обробки текстових даних.
"""
import markovify
import os 
import re 

CORPUS_FILE = 'data.txt' 
GENERATED_SENTENCE_COUNT = 5 # Кількість речень для генерації 
MARKOV_STATE_SIZE = 2 # Порядок Марковського ланцюга 

def main():
    # Перевіряємо наявність файлу корпусу
    if not os.path.exists(CORPUS_FILE):
        print(f"Помилка: Файл корпусу '{CORPUS_FILE}' не знайдено.")
        print("Будь ласка, створіть цей файл i вставте туди текст, наданий раніше.")
        return

    # Завантажуємо текст з файлу
    with open(CORPUS_FILE, 'r', encoding='utf-8') as f:
        text = f.read()
    # Замінюємо кілька переносів рядка на один, видаляємо зайві пробіли
    text = re.sub(r'\n\s*\n', '\n', text)
    text = re.sub(r'\s+', ' ', text).strip()
    print(f"Корпус завантажено. Розмір тексту: {len(text)} символів.")

    print(f"\nСтворюємо модель Markovify з state_size={MARKOV_STATE_SIZE}...")
    try:
        # Створюємо модель(Markovify автоматично розбиває текст на речення)
        text_model = markovify.Text(text, state_size=MARKOV_STATE_SIZE)
        print("Модель успішно створена.")
    except Exception as e:
        print(f"Помилка при створенні моделі Markovify: {e}")
        print("Перевірте, чи є достатньо тексту у файлі та чи він коректний.")
        return

    #Генерація звітів
    print(f"\n--- Генерація {GENERATED_SENTENCE_COUNT} звітів ---")
    for i in range(GENERATED_SENTENCE_COUNT):
        sentence = text_model.make_sentence(tries=100)# 100 спроб знайти валідне речення
        if sentence:
            print(f"Звіт {i+1}: {sentence}")
        else:
            print(f"Звіт {i+1}: Не вдалося згенерувати речення. Спробуйте збільшити корпус або зменшити state_size.")

    # Оцінка якості
    print("\n--- Оцінка якості згенерованих звітів ---")
    print("Для оцінки якості, прочитайте згенеровані речення вище.")
    print("Зверніть увагу на:")
    print("1. **Граматичну коректність:** Чи правильно побудовані речення?")
    print("2. **Релевантність термінології:** Чи використовуються слова та фрази, пов'язані з енергетикою?")
    print("3. **Логічний зв'язок:** Чи є сенс у згенерованих реченнях? (Часто його бракує у простих Марковських моделях).")
    print("\nВисновок: Markovify добре справляється з імітацією стилю та словникового запасу, але може мати проблеми з логічною зв'язністю складних тем.")

if __name__ == "__main__":
    main()